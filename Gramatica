Gramática

Gramática G = (V, Σ, P, S)

V = { EXP,    BE,       AE,     TYPE,   DISJS,  DISJ,   CONJS,    CONJ,
      ACOMP,  BCOMP,    BUNIT,  BN,     TERMS,  TERM,   FACTS,    FACT,
      AUNIT,  DEC,      IDS,    ASSIGN, READ,   WRITE,  WRITELN,  PRINT,
      PRINTS, BLOCK,    DO,     IF,     IFELSE, WHILE,  FOR1,     FOR2,  
      REPEAT, DEFFUNC,  DFUN1,  DFUN2,  PARS,   PS,     PAR,      INS,
      FUNS,   IS,     S }
      
Σ = { program,  with, do,     end,    if,     then,   else,
      while,    from, to,     by,     string, repeat, times,
      number,   bool, String, func,   true,   false,  or,
      and,      not,  <=,     >=,     <,      >,      ==,
      !=,       +,    -,      /,      %,      div,    mod,
      Num}


P:
    # Programa general
    FUNS  -> λ
    FUNS  -> FUNS DEFFUNC; 
    IS    -> λ
    IS    -> IS INS;
    S     -> FUNS program IS end;
    
    # Expresiones
    EXP   -> BE
    EXP   -> AE
    
    #Expresiones aritméticas
    AE    -> TERMS
    TERMS -> TERM
    TERMS -> TERMS + TERM
    TERMS -> TERMS - TERM
    TERM  -> FACTS
    FACTS -> FACT
    FACTS -> FACTS * FACT
    FACTS -> FACTS / FACT
    FACTS -> FACTS % FACT
    FACTS -> FACTS div FACT
    FACTS -> FACTS mod FACT
    FACT  -> AUNIT
    FACT  -> -FACT
    AUNIT -> (EA)
    AUNIT -> Num
    AUNIT -> Ident
    
    
    # Expresiones booleanas
    BE    -> DISJS
    DISJS -> DISJ
    DISJS -> DISJS or DISJ
    DISJ  -> CONJS
    CONJS -> CONJ
    CONJS -> CONJS and CONJ
    CONJ  -> ACOMP
    CONJ  -> BCOMP
    
    ACOMP -> AE >= AE
    ACOMP -> AE > AE
    ACOMP -> AE <= AE
    ACOMP -> AE < AE
    ACOMP -> AE /= AE
    ACOMP -> AE == AE
    BCOMP -> BN
    BCOMP -> BCOMP == BN
    BCOMP -> BCOMP != BN
    BN    -> BUNIT
    BN    -> not BN
    
    BUNIT  -> (BE)
    BUNIT  -> true
    BUNIT  -> false
    BUNIT  -> ident
    
    
    
    
    # Declaraciones
    TYPE  -> number
    TYPE  -> bool
    TYPE  -> string
    DEC   -> TYPE ident = EXP
    DEC   -> TYPE IDS ident
    IDS   -> λ
    IDS   -> IDS ident,
    
    # Entrada/Salida/Asignaciones
    ASSIG  -> ident = EXP
    READ    -> read ident
    WRITE   -> write PRINTS PRINT
    WRITELN -> writeln PRINTS PRINT
    PRINT   -> string
    PRINT   -> EXP
    PRINTS  -> λ
    PRINTS  -> PRINT,
    
    # Funciones
    DEFFUNC -> DFUN1
    DEFFUNC -> DFUN2
    DFUN1   -> func ident(PARS) begin IS end
    DFUN2   -> func ident(PARS) -> TYPE begin IS end
    PARS    -> λ
    PARS    -> PS PAR
    PS      -> λ
    PS      -> PS PAR,
    PAR     -> TYPE ident
    
    # Bloques
    BLOCK   -> DO
    BLOCK   -> IF
    BLOCK   -> IFELSE
    BLOCK   -> FOR1
    BLOCK   -> FOR2
    DO      -> with DECS do IS end
    IF      -> if BE then IS end
    IFELSE  -> if BE then IS else IS end
    WHILE   -> while BE do IS end
    FOR1    -> for ident from AE to AE do IS end
    FOR2    -> for ident from AE to AE by AE
    REPEAT  -> repeat ident AE times
    
    # Instrucciones
    INS -> BLOCK
    INS -> READ
    INS -> WRITE
    INS -> WRITEL
    INS -> FUN
    INS -> ASSIG
    INS -> DEC
    

    
   
    
